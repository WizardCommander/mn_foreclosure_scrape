## Goal
- Scrape contacts that may be in need of financial assistance in the MN/Minneapolis area
- Based on foreclosure/bankruptcy notices
- Contains info for all MN: https://www.mnpublicnotice.com/(S(egfrrthaifbs4srydcwaqpnr))/Search.aspx#searchResults
- Contains info for just Twin cities metro area: https://classifieds.startribune.com/mn/mortgage-foreclosures/search?search_type=advanced&ap_c=22683977&sort_by=date&order=desc&limit=240
- Client sends mail delivery to potential people. wants new potential clients daily
- Could build them an n8n flow, but would probably need to guide them on setting it up
- Could also just host it myself
- Start with just regex then expand to ai if needed
- need to use selenium

Desired Fields:
A: First Name, B: Last Name, C: Street, D: City, E: State, F: Zip, G: Date Filed, H: Plantiff (or creditor)
- could include link to public notice as well

MN public notice:
- basic .aspx search site (similar to ndrin)
- some require checkbox captcha to view a search result
- Some have a pdf
- should probably filter by last 24 hours
- Should ask what keywords would be good to use
- If content is unreachable by script, fallback to trying to solve captcha (js command injection?)

n8n flow ideas:
- can trigger on a daily schedule
- use firecrawl or custom logic to go to mnpublicnotice and pull up the right search searchResults
- loop through each record and pull all text
- send text to an AI node to parse for desired field data
- output data to csv column
- once finished, send csv via gmail node to correct contact, or just output to a googlesheet

need to add:
- pagination
- adjust data to be able to handle counties (not just cities)
- need to improve text parsing so no duplicates or weird entries (just use ai)
- adjust csv naming conventions
- append each record to the csv as its grabbed, dont wait til the end. avoid memory issues

latest issues:
- waits a little too long for captcha to load
1. O(n²) complexity: For each notice, we iterate through all buttons to find unprocessed ones
    - Assessment: Acceptable because n=50 max, and this eliminates 90-second delays
    - Alternative: Could build ID→button map, but premature optimization